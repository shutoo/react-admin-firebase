{"version":3,"file":"index.umd.js","sources":["../src/misc/arrayHelpers.ts","../src/misc/objectFlatten.ts","../src/misc/logger/logger-base.ts","../src/misc/logger/logger.ts","../src/misc/logger/firestore-logger.ts","../src/misc/dispatcher.ts","../src/misc/internal.models.ts","../src/misc/translate-from-firestore.ts","../src/misc/document-parser.ts","../src/misc/pathHelper.ts","../src/misc/translate-to-firestore.ts","../src/providers/database/firebase/FirebaseWrapper.ts","../src/misc/firebase-models.ts","../src/providers/database/ResourceManager.ts","../src/providers/database/FireClient.ts","../src/misc/metadata-parser.ts","../src/providers/lazy-loading/queryCursors.ts","../src/providers/lazy-loading/paramsToQuery.ts","../src/providers/lazy-loading/FirebaseLazyLoadingClient.ts","../src/providers/AuthProvider.ts","../src/misc/status-code-translator.ts","../src/providers/DataProvider.ts","../src/providers/queries/GetList.ts","../src/providers/queries/GetOne.ts","../src/providers/queries/GetMany.ts","../src/providers/queries/GetManyReference.ts","../src/providers/commands/Update.ts","../src/providers/commands/UpdateMany.ts","../src/providers/commands/Create.ts","../src/providers/commands/Delete.ts","../src/providers/commands/Delete.Soft.ts","../src/providers/commands/DeleteMany.ts","../src/providers/commands/DeleteMany.Soft.ts"],"sourcesContent":["import { get, isEmpty } from 'lodash';\nimport { getFieldReferences, SearchObj } from './objectFlatten';\n\nexport function sortArray(\n  data: Array<{}>,\n  field: string,\n  dir: 'asc' | 'desc'\n): void {\n  data.sort((a: {}, b: {}) => {\n    const rawA = get(a, field);\n    const rawB = get(b, field);\n    const isAsc = dir === \"asc\";\n\n    const isNumberField = Number.isFinite(rawA) && Number.isFinite(rawB);\n    if (isNumberField) {\n      return basicSort(rawA, rawB, isAsc);\n    }\n    const isStringField = typeof rawA === 'string' && typeof rawB === 'string';\n    if (isStringField) {\n      const aParsed = rawA.toLowerCase();\n      const bParsed = rawB.toLowerCase();\n      return basicSort(aParsed, bParsed, isAsc);\n    }\n    const isDateField = rawA instanceof Date && rawB instanceof Date;\n    if (isDateField) {\n      return basicSort(rawA, rawB, isAsc);\n    }\n    return basicSort(!!rawA, !!rawB, isAsc);\n  });\n}\n\nfunction basicSort(aValue: any, bValue: any, isAsc: boolean) {\n  if (aValue > bValue) {\n    return isAsc ? 1 : -1;\n  }\n  if (aValue < bValue) {\n    return isAsc ? -1 : 1;\n  }\n  return 0;\n}\n\nexport function filterArray(\n  data: Array<{}>,\n  searchFields?: { [field: string]: string | number | boolean | null }\n): Array<{}> {\n  if (!searchFields || isEmpty(searchFields)) {\n    return data;\n  }\n  const searchObjs: SearchObj[] = [];\n  Object.keys(searchFields).map((fieldName) => {\n    const fieldValue = searchFields[fieldName];\n    const getSubObjects = getFieldReferences(fieldName, fieldValue);\n    searchObjs.push(...getSubObjects);\n  });\n  const filtered = data.filter((row) =>\n    searchObjs.reduce((acc, cur) => {\n      const res = doesRowMatch(row, cur.searchField, cur.searchValue);\n      return res && acc;\n    }, true as boolean)\n  );\n  return filtered;\n}\n\nexport function doesRowMatch(\n  row: {},\n  searchField: string,\n  searchValue: any\n): boolean {\n  const searchThis = get(row, searchField);\n  const bothAreFalsey = !searchThis && !searchValue;\n  if (bothAreFalsey) {\n    return true;\n  }\n  const nothingToSearch = !searchThis;\n  if (nothingToSearch) {\n    return false;\n  }\n  const isStringSearch = typeof searchValue === 'string';\n  if (isStringSearch) {\n    return searchThis\n      .toString()\n      .toLowerCase()\n      .includes(searchValue.toLowerCase());\n  }\n  const isBooleanOrNumber =\n    typeof searchValue === 'boolean' || typeof searchValue === 'number';\n  if (isBooleanOrNumber) {\n    return searchThis === searchValue;\n  }\n  const isArraySearch = Array.isArray(searchValue);\n  if (isArraySearch) {\n    return searchValue.includes(searchThis);\n  }\n  return false;\n}\n","type SearchValues = {} | number | string | boolean | null ;\ntype SearchValue = SearchValues | SearchValue[];\n\nexport interface SearchObj {\n  searchField: string;\n  searchValue: SearchValue;\n}\nexport function getFieldReferences(\n  fieldName: string,\n  value: {} | SearchValue\n): SearchObj[] {\n  const isFalsy = !value;\n  const isSimple = isFalsy ||\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean';\n\n  if (isSimple) {\n    return [\n      {\n        searchField: fieldName,\n        searchValue: value as SearchValue,\n      },\n    ];\n  }\n  const tree = {} as Record<string, SearchValue>;\n  tree[fieldName] = value;\n  return objectFlatten(tree);\n}\n\nexport function objectFlatten(tree: {}): SearchObj[] {\n  var leaves: SearchObj[] = [];\n  var recursivelyWalk = function (obj: any, path: string | null) {\n    path = path || \"\";\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        const objVal = obj && obj[key];\n        const currentPath = !!path ? path + \".\" + key : key;\n        const isWalkable =\n          typeof objVal === 'object' || objVal instanceof Array;\n        if (isWalkable) {\n          recursivelyWalk(objVal, currentPath);\n        } else {\n          leaves.push({ searchField: currentPath, searchValue: objVal });\n        }\n      }\n    }\n  };\n  recursivelyWalk(tree, null);\n  return leaves;\n}\n","type LogFn = (...args: any) => void;\n\nexport const LogNoOp: LogFn = (...args: any) => null;\n\nexport class LoggerBase {\n  constructor(private title: string, private cacheEnabledKey: string) {}\n\n  private isEnabled() {\n    return !!localStorage.getItem(this.cacheEnabledKey);\n  }\n\n  SetEnabled(isEnabled: boolean) {\n    if (isEnabled) {\n      localStorage.setItem(this.cacheEnabledKey, 'true');\n    } else {\n      localStorage.removeItem(this.cacheEnabledKey);\n    }\n  }\n\n  public get log() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.log.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n\n  public get warn() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.warn.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n\n  public get error() {\n    if (!this.isEnabled()) {\n      return LogNoOp;\n    }\n    const boundLogFn: (...args: any) => void = console.error.bind(\n      console,\n      this.title\n    );\n    return boundLogFn;\n  }\n}\n","import { LoggerBase } from './logger-base';\n\nconst LOGGER_ENABLEDKEY = 'LOGGING_ENABLED';\nexport const logger = new LoggerBase('ðŸ”¥raf:', LOGGER_ENABLEDKEY);\n\nexport const log = logger.log;\nexport const logError = logger.error;\nexport const logWarn = logger.warn;\n","import { RAFirebaseOptions } from 'providers/options';\nimport { LogNoOp, LoggerBase } from './logger-base';\n\nconst LOGGER_ENABLEDKEY = 'LOGGING_FIRESTORE_COSTS_ENABLED';\nconst logger = new LoggerBase('ðŸ’¸firestore-costs:', LOGGER_ENABLEDKEY);\n\nconst KEY_SINGLE = 'firecosts-single-reads';\n\nexport interface IFirestoreLogger {\n  logDocument: (count: number) => Function;\n  SetEnabled: (isEnabled: boolean) => void;\n  ResetCount: (shouldReset: boolean) => void;\n}\n\nexport function MakeFirestoreLogger(\n  options: RAFirebaseOptions\n): IFirestoreLogger {\n  function notEnabled() {\n    return !options?.lazyLoading?.enabled;\n  }\n\n  function incrementRead(incrementBy = 1) {\n    const currentCountRaw = localStorage.getItem(KEY_SINGLE) || '';\n    const currentCount = parseInt(currentCountRaw) || 0;\n    const incremented = currentCount + incrementBy;\n    localStorage.setItem(KEY_SINGLE, incremented + '');\n    return incremented;\n  }\n  function clearCache() {\n    localStorage.removeItem(KEY_SINGLE);\n  }\n  return {\n    SetEnabled(isEnabled: boolean) {\n      logger.SetEnabled(isEnabled);\n    },\n    ResetCount(shouldReset: boolean) {\n      shouldReset && clearCache()\n    },\n    logDocument(docCount: number) {\n      if (notEnabled()) {\n        return LogNoOp;\n      }\n      const count = incrementRead(docCount);\n      const suffix = `+${docCount} (session total=${count} documents read)`;\n      const boundLogFn: (...args: any) => void = logger.log.bind(\n        console,\n        suffix\n      );\n      return boundLogFn;\n    },\n  };\n}\n","import { log } from './logger';\n\nexport type DispatchEvent =\n\t'FILE_UPLOAD_WILL_START' |\n\t'FILE_UPLOAD_PROGRESS' |\n\t'FILE_UPLOAD_PAUSED' |\n\t'FILE_UPLOAD_RUNNING' |\n\t'FILE_UPLOAD_CANCELED' |\n\t'FILE_UPLOAD_COMPLETE' |\n\t'FILE_SAVED';\n\nexport function dispatch(\n\teventName: DispatchEvent,\n\tfileName: string,\n\tdata?: any,\n): void {\n\tconst eventMonitor = document.getElementById('eventMonitor');\n\tif (!eventMonitor) {\n\t\tlog(`eventMonitor not found to dispatch event ${eventName} for ${fileName}`);\n\t\treturn;\n\t}\n\tconst eventData = { fileName, data };\n\tlet event = new CustomEvent(eventName, { detail: eventData });\n\teventMonitor.dispatchEvent(event);\n};","export const REF_INDENTIFIER = \"___REF_FULLPATH_\";\n\nexport interface ParsedRefDoc {\n  ___refpath: string;\n  ___refid: string;\n}\n","import { set, has } from \"lodash\";\nimport { IFirebaseWrapper } from \"providers/database\";\nimport { REF_INDENTIFIER } from \"./internal.models\";\nimport { logError } from \"./logger\";\nimport { FireStoreDocumentRef } from \"./firebase-models\";\n\nexport interface RefDocFound {\n  fieldPath: string;\n  refDocPath: string;\n}\n\nexport interface FromFirestoreResult {\n  parsedDoc: any;\n  refdocs: RefDocFound[];\n}\n\nexport function translateDocFromFirestore(obj: any) {\n  const isObject = !!obj && typeof obj === \"object\";\n  const result: FromFirestoreResult = {\n    parsedDoc: {},\n    refdocs: [],\n  };\n  if (!isObject) {\n    return result;\n  }\n  Object.keys(obj).map((key) => {\n    const value = obj[key];\n    obj[key] = recusivelyCheckObjectValue(value, key, result);\n  });\n  result.parsedDoc = obj;\n  return result;\n}\n\nexport function recusivelyCheckObjectValue(\n  input: any,\n  fieldPath: string,\n  result: FromFirestoreResult\n): any {\n  const isFalsey = !input;\n  if (isFalsey) {\n    return input;\n  }\n  const isPrimitive = typeof input !== \"object\";\n  if (isPrimitive) {\n    return input;\n  }\n  const isTimestamp = !!input.toDate && typeof input.toDate === \"function\";\n  if (isTimestamp) {\n    return input.toDate();\n  }\n  const isArray = Array.isArray(input);\n  if (isArray) {\n    return (input as any[]).map((value, index) =>\n      recusivelyCheckObjectValue(value, `${fieldPath}.${index}`, result)\n    );\n  }\n  const isDocumentReference = isInputADocReference(input);\n  if (isDocumentReference) {\n    const ref = input as FireStoreDocumentRef;\n    result.refdocs.push({ fieldPath: fieldPath, refDocPath: ref.path });\n    return ref.id;\n  }\n  const isObject = typeof input === \"object\";\n  if (isObject) {\n    Object.keys(input).map((key) => {\n      const value = input[key];\n      input[key] = recusivelyCheckObjectValue(value, key, result);\n    });\n    return input;\n  }\n  return input;\n}\n\nfunction isInputADocReference(input: any): boolean {\n  const isDocumentReference = typeof input.id === \"string\" &&\n    typeof input.firestore === \"object\" &&\n    typeof input.parent === \"object\" &&\n    typeof input.path === \"string\";\n  return isDocumentReference;\n}\n\nexport function applyRefDocs(\n  doc: any,\n  refDocs: RefDocFound[],\n) {\n  refDocs.map((d) => {\n    set(doc, REF_INDENTIFIER + d.fieldPath, d.refDocPath);\n  });\n  return doc;\n}\n\nexport const recursivelyMapStorageUrls = async (\n  fireWrapper: IFirebaseWrapper,\n  fieldValue: any\n): Promise<any> => {\n  const isPrimitive = !fieldValue || typeof fieldValue !== 'object';\n  if (isPrimitive) {\n    return fieldValue\n  }\n  const isFileField = has(fieldValue, 'src');\n  if (isFileField) {\n    try {\n      const src = await fireWrapper\n        .storage()\n        .ref(fieldValue.src)\n        .getDownloadURL();\n      return {\n        ...fieldValue,\n        src,\n      };\n    } catch (error) {\n      logError(`Error when getting download URL`, {\n        error,\n      });\n      return fieldValue;\n    }\n  }\n  const isArray = Array.isArray(fieldValue);\n  if (isArray) {\n    return Promise.all(\n      (fieldValue as any[]).map(async (value, index) => {\n        fieldValue[index] = await recursivelyMapStorageUrls(fireWrapper, value);\n      })\n    );\n  }\n  const isDocumentReference = isInputADocReference(fieldValue);\n  if (isDocumentReference) {\n    return fieldValue;\n  }\n  const isObject = !isArray && typeof fieldValue === \"object\";\n  if (isObject) {\n    return Promise.all(\n      Object.keys(fieldValue).map(async (key) => {\n        const value = fieldValue[key];\n        fieldValue[key] = await recursivelyMapStorageUrls(fireWrapper, value);\n      })\n    );\n  }\n};\n","import { FireStoreQueryDocumentSnapshot, FireStoreDocumentSnapshot } from \"./firebase-models\";\nimport { logWarn } from \"./logger\";\nimport { applyRefDocs, translateDocFromFirestore } from \"./translate-from-firestore\";\nimport * as ra from './react-admin-models';\n\nexport function parseFireStoreDocument<T extends ra.Record>(doc: FireStoreQueryDocumentSnapshot | FireStoreDocumentSnapshot | undefined): T {\n  if (!doc) {\n    logWarn('parseFireStoreDocument: no doc', { doc });\n    return {} as T;\n  }\n  const data = doc.data();\n  const result = translateDocFromFirestore(data);\n  const dataWithRefs = applyRefDocs(result.parsedDoc, result.refdocs);\n  // React Admin requires an id field on every document,\n  // So we can just using the firestore document id\n  return { id: doc.id, ...dataWithRefs } as T;\n}\n","import path from \"path-browserify\";\n\nexport function getAbsolutePath(\n  rootRef: undefined | string | (() => string),\n  relativePath: string | null\n): string {\n  if (!rootRef) {\n    return relativePath+'';\n  }\n  if (!relativePath) {\n    throw new Error(\n      \"Resource name must be a string of length greater than 0 characters\"\n    );\n  }\n  const rootRefValue = typeof rootRef === \"string\" ? rootRef : rootRef();\n  const withSlashes = path.join(\"/\", rootRefValue, \"/\", relativePath, \"/\");\n  const slashCount = withSlashes.split(\"/\").length - 1;\n  if (slashCount % 2) {\n    throw new Error(`The rootRef path must point to a \"document\"\n    not a \"collection\"e.g. /collection/document/ or\n    /collection/document/collection/document/`);\n  }\n  return withSlashes.slice(1, -1);\n}\n\nexport function joinPaths(...args: string[]) {\n  return path.join(...args);\n}\n","import { REF_INDENTIFIER } from \"./internal.models\";\n\ninterface ParsedUpload {\n  fieldDotsPath: string;\n  fieldSlashesPath: string;\n  rawFile: File | any;\n}\n\ninterface ParsedDocRef {\n  fieldDotsPath: string;\n  refPath: string;\n}\n\ninterface ParseResult {\n  parsedDoc: any;\n  uploads: ParsedUpload[];\n  refdocs: ParsedDocRef[];\n}\n\nexport function translateDocToFirestore(obj: any): ParseResult {\n  const isObject = !!obj && typeof obj === \"object\";\n  const result: ParseResult = {\n    uploads: [],\n    refdocs: [],\n    parsedDoc: {},\n  };\n  if (!isObject) {\n    return result;\n  }\n  Object.keys(obj).map((key) => {\n    const value = obj[key];\n    recusivelyParseObjectValue(value, key, result);\n  });\n  result.parsedDoc = obj;\n  return result;\n}\n\nexport function recusivelyParseObjectValue(\n  input: any,\n  fieldPath: string,\n  result: ParseResult\n): any {\n  const isFalsey = !input;\n  if (isFalsey) {\n    return input;\n  }\n  const isRefField =\n    typeof fieldPath === \"string\" && fieldPath.includes(REF_INDENTIFIER);\n  if (isRefField) {\n    const refDocFullPath = input as string;\n    result.refdocs.push({\n      fieldDotsPath: fieldPath,\n      refPath: refDocFullPath,\n    });\n    return;\n  }\n  const isPrimitive = typeof input !== \"object\";\n  if (isPrimitive) {\n    return input;\n  }\n  const isTimestamp = !!input.toDate && typeof input.toDate === \"function\";\n  if (isTimestamp) {\n    return input.toDate();\n  }\n  const isArray = Array.isArray(input);\n  if (isArray) {\n    return (input as []).map((value, index) =>\n      recusivelyParseObjectValue(value, `${fieldPath}.${index}`, result)\n    );\n  }\n  const isFileField = !!input && input.hasOwnProperty(\"rawFile\");\n  if (isFileField) {\n    result.uploads.push({\n      fieldDotsPath: fieldPath,\n      fieldSlashesPath: fieldPath.split(\".\").join(\"/\"),\n      rawFile: input.rawFile,\n    });\n    delete input.rawFile;\n    return;\n  }\n  Object.keys(input).map((key) => {\n    const value = input[key];\n    recusivelyParseObjectValue(value, `${fieldPath}.${key}`, result);\n  });\n  return input;\n}\n","import {\n  IFirebaseWrapper,\n} from './IFirebaseWrapper';\n\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nimport { log } from 'misc';\nimport { RAFirebaseOptions } from 'providers/options';\nimport {\n  FireApp,\n  FireAuth,\n  FireAuthUserCredentials,\n  FireStorage,\n  FireStoragePutFileResult,\n  FireStore,\n  FireStoreBatch,\n  FireStoreCollectionRef,\n  FireUploadTaskSnapshot,\n  FireUser\n} from 'misc/firebase-models';\n\nexport class FirebaseWrapper implements IFirebaseWrapper {\n  private firestore: FireStore;\n  private app: FireApp;\n  public options: RAFirebaseOptions;\n\n  constructor(\n    inputOptions: RAFirebaseOptions | undefined,\n    firebaseConfig: {},\n  ) { \n    const optionsSafe = inputOptions || {};\n    this.options = optionsSafe;\n    this.app = (window as any)['_app'] = ObtainFirebaseApp(firebaseConfig, optionsSafe);\n    this.firestore = this.app.firestore();\n  }\n  dbGetCollection(absolutePath: string): FireStoreCollectionRef {\n    return this.firestore.collection(absolutePath);\n  }\n  dbCreateBatch(): FireStoreBatch {\n    return this.firestore.batch();\n  }\n  dbMakeNewId(): string {\n    return this.firestore.collection(\"collections\").doc().id\n  }\n\n  public OnUserLogout(callBack: (u: FireUser | null) => any) {\n    this.app.auth().onAuthStateChanged((user) => {\n      const isLoggedOut = !user;\n      log('FirebaseWrapper.OnUserLogout', { user, isLoggedOut });\n      if (isLoggedOut) {\n        callBack(user);\n      }\n    });\n  }\n  putFile(storagePath: string, rawFile: any): FireStoragePutFileResult {\n    const task = this.app.storage().ref(storagePath).put(rawFile);\n    const taskResult = new Promise<FireUploadTaskSnapshot>(\n      (res, rej) => task.then(res).catch(rej)\n    );\n    const downloadUrl = taskResult.then(t => t.ref.getDownloadURL()).then(url => url as string)\n    return {\n      task,\n      taskResult,\n      downloadUrl,\n    }\n  }\n  async getStorageDownloadUrl(fieldSrc: string): Promise<string> {\n    return this.app.storage().ref(fieldSrc).getDownloadURL();\n  }\n  public serverTimestamp() {\n    // This line doesn't work for some reason, might be firebase sdk.\n    return firebase.firestore.FieldValue.serverTimestamp();\n  }\n  async authSetPersistence(persistenceInput: 'session' | 'local' | 'none') {\n    let persistenceResolved: string;\n    switch (persistenceInput) {\n      case 'local':\n        persistenceResolved = firebase.auth.Auth.Persistence.LOCAL;\n        break;\n      case 'none':\n        persistenceResolved = firebase.auth.Auth.Persistence.NONE;\n        break;\n      case 'session':\n      default:\n        persistenceResolved = firebase.auth.Auth.Persistence.SESSION;\n        break;\n    }\n    log('setPersistence', { persistenceInput, persistenceResolved });\n    return this.app.auth()\n      .setPersistence(persistenceResolved)\n      .catch((error) => console.error(error));\n  }\n  async authSigninEmailPassword(email: string, password: string): Promise<FireAuthUserCredentials> {\n    const user = await this.app.auth().signInWithEmailAndPassword(\n      email,\n      password\n    );\n    return user;\n  }\n  async authSignOut(): Promise<void> {\n    return this.app.auth().signOut();\n  }\n  async authGetUserLoggedIn(): Promise<FireUser> {\n    return new Promise((resolve, reject) => {\n      const auth = this.app.auth();\n      if (auth.currentUser) return resolve(auth.currentUser);\n      const unsubscribe = this.app.auth().onAuthStateChanged((user) => {\n        unsubscribe();\n        if (user) {\n          resolve(user);\n        } else {\n          reject();\n        }\n      });\n    });\n  }\n  public async GetUserLogin(): Promise<FireUser> {\n    return this.authGetUserLoggedIn();\n  }\n\n  /** @deprecated */\n  public auth(): FireAuth {\n    return this.app.auth();\n  }\n  /** @deprecated */\n  public storage(): FireStorage {\n    return this.app.storage();\n  }\n  /** @deprecated */\n  public GetApp(): FireApp {\n    return this.app;\n  }\n  /** @deprecated */\n  public db(): FireStore {\n    return this.firestore;\n  }\n}\n\nfunction ObtainFirebaseApp(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n): firebase.app.App {\n  if (options.app) {\n    return options.app;\n  }\n  const isInitialized = !!firebase.apps?.length;\n  if (isInitialized) {\n    return firebase.app();\n  } else {\n    return firebase.initializeApp(firebaseConfig);\n  }\n}\n","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/storage';\n\nexport type FireUser = firebase.User;\nexport type FireApp = firebase.app.App;\n\nexport type FireStorage = firebase.storage.Storage;\nexport type FireStorageReference = firebase.storage.Reference;\nexport type FireUploadTaskSnapshot = firebase.storage.UploadTaskSnapshot;\nexport type FireUploadTask = firebase.storage.UploadTask;\nexport type FireStoragePutFileResult = {\n  task: FireUploadTask, \n  taskResult: Promise<FireUploadTaskSnapshot>,\n  downloadUrl: Promise<string>,\n}\n\nexport type FireAuth = firebase.auth.Auth;\nexport type FireAuthUserCredentials = firebase.auth.UserCredential;\n\nexport type FireStore = firebase.firestore.Firestore;\nexport type FireStoreBatch = firebase.firestore.WriteBatch;\nexport type FireStoreTimeStamp = firebase.firestore.FieldValue;\nexport type FireStoreDocumentRef = firebase.firestore.DocumentReference;\nexport type FireStoreDocumentSnapshot = firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>;\nexport type FireStoreCollectionRef = firebase.firestore.CollectionReference;\nexport type FireStoreQueryDocumentSnapshot = firebase.firestore.QueryDocumentSnapshot;\nexport type FireStoreQuery = firebase.firestore.Query;\nexport type FireStoreQueryOrder = firebase.firestore.OrderByDirection;\n\nexport const TASK_PAUSED = firebase.storage.TaskState.PAUSED\nexport const TASK_RUNNING = firebase.storage.TaskState.RUNNING\nexport const TASK_CANCELED = firebase.storage.TaskState.CANCELED\n","import { RAFirebaseOptions } from '../options';\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\nimport {\n  log,\n  getAbsolutePath,\n  messageTypes,\n  logWarn,\n  IFirestoreLogger,\n  parseFireStoreDocument,\n} from '../../misc';\nimport { FireStoreCollectionRef } from 'misc/firebase-models';\n\ntype IResourceItem = {} & { id: string, deleted?: boolean };\nexport interface IResource {\n  path: string;\n  pathAbsolute: string;\n  collection: FireStoreCollectionRef;\n  list: Array<IResourceItem>;\n}\n\nexport class ResourceManager {\n  private resources: Record<string, IResource> = {};\n\n  constructor(\n    private fireWrapper: IFirebaseWrapper,\n    private options: RAFirebaseOptions,\n    private flogger: IFirestoreLogger\n  ) {\n    this.fireWrapper.OnUserLogout(() => {\n      this.resources = {};\n    });\n  }\n\n  public async TryGetResource(\n    resourceName: string,\n    refresh?: 'REFRESH',\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    if (refresh) {\n      await this.RefreshResource(resourceName, collectionQuery);\n    }\n    return this.TryGetResourcePromise(resourceName, collectionQuery);\n  }\n\n  public GetResource(relativePath: string): IResource {\n    const resource: IResource = this.resources[relativePath];\n    if (!resource) {\n      throw new Error(\n        `react-admin-firebase: Can't find resource: \"${relativePath}\"`\n      );\n    }\n    return resource;\n  }\n\n  public async TryGetResourcePromise(\n    relativePath: string,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    log('resourceManager.TryGetResourcePromise', {\n      relativePath,\n      collectionQuery,\n    });\n    await this.initPath(relativePath);\n\n    const resource: IResource = this.resources[relativePath];\n    if (!resource) {\n      throw new Error(\n        `react-admin-firebase: Cant find resource: \"${relativePath}\"`\n      );\n    }\n    return resource;\n  }\n\n  public async RefreshResource(\n    relativePath: string,\n    collectionQuery: messageTypes.CollectionQueryType | undefined\n  ) {\n    if (this.options?.lazyLoading?.enabled) {\n      logWarn('resourceManager.RefreshResource', {\n        warn: 'RefreshResource is not available in lazy loading mode',\n      });\n      throw new Error(\n        'react-admin-firebase: RefreshResource is not available in lazy loading mode'\n      );\n    }\n\n    log('resourceManager.RefreshResource', { relativePath, collectionQuery });\n    await this.initPath(relativePath);\n    const resource = this.resources[relativePath];\n\n    const collection = resource.collection;\n    const query = this.applyQuery(collection, collectionQuery);\n    const newDocs = await query.get();\n\n    resource.list = newDocs.docs.map((doc) => parseFireStoreDocument<IResourceItem>(doc));\n    const count = newDocs.docs.length;\n    this.flogger.logDocument(count)();\n    log('resourceManager.RefreshResource', {\n      newDocs,\n      resource,\n      collectionPath: collection.path,\n    });\n  }\n\n  public async GetSingleDoc(relativePath: string, docId: string) {\n    await this.initPath(relativePath);\n    const resource = this.GetResource(relativePath);\n    this.flogger.logDocument(1)();\n    const docSnap = await resource.collection.doc(docId).get();\n    if (!docSnap.exists) {\n      throw new Error('react-admin-firebase: No id found matching: ' + docId);\n    }\n    const result = parseFireStoreDocument(docSnap);\n    log('resourceManager.GetSingleDoc', {\n      relativePath,\n      resource,\n      docId,\n      docSnap,\n      result,\n    });\n    return result;\n  }\n\n  private async initPath(relativePath: string): Promise<void> {\n    const rootRef = this.options && this.options.rootRef;\n    const absolutePath = getAbsolutePath(rootRef, relativePath);\n    const hasBeenInited = !!this.resources[relativePath];\n    log('resourceManager.initPath()', {\n      absolutePath,\n      hasBeenInited,\n    });\n    if (hasBeenInited) {\n      log('resourceManager.initPath() has been initialized already...');\n      return;\n    }\n    const collection = this.fireWrapper.dbGetCollection(absolutePath);\n    const list: Array<IResourceItem> = [];\n    const resource: IResource = {\n      collection,\n      list,\n      path: relativePath,\n      pathAbsolute: absolutePath,\n    };\n    this.resources[relativePath] = resource;\n    log('resourceManager.initPath() setting resource...', {\n      resource,\n      allResources: this.resources,\n      collection: collection,\n      collectionPath: collection.path,\n    });\n  }\n\n  public async getUserIdentifier(): Promise<string> {\n    const identifier = this.options.associateUsersById\n      ? await this.getCurrentUserId()\n      : await this.getCurrentUserEmail();\n    return identifier;\n  }\n\n  private async getCurrentUserEmail() {\n    const user = await this.fireWrapper.authGetUserLoggedIn();\n    if (user) {\n      return user.email as string;\n    } else {\n      return 'annonymous user';\n    }\n  }\n  private async getCurrentUserId() {\n    const user = await this.fireWrapper.authGetUserLoggedIn();\n    if (user) {\n      return user.uid;\n    } else {\n      return 'annonymous user';\n    }\n  }\n\n  private applyQuery(\n    collection: FireStoreCollectionRef,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): FireStoreCollectionRef {\n    const collRef = collectionQuery ? collectionQuery(collection) : collection;\n\n    log('resourceManager.applyQuery() ...', {\n      collection,\n      collectionQuery: (collectionQuery || '-').toString(),\n      collRef,\n    });\n    return collRef;\n  }\n}\n","import { set, get } from \"lodash\";\nimport { TASK_CANCELED, TASK_PAUSED, TASK_RUNNING } from \"../../misc/firebase-models\";\nimport {\n  AddCreatedByFields,\n  AddUpdatedByFields,\n  IFirestoreLogger,\n  joinPaths,\n  log,\n  logError,\n  dispatch,\n  translateDocToFirestore,\n} from \"../../misc\";\nimport { RAFirebaseOptions } from \"../options\";\nimport { IFirebaseWrapper } from \"./firebase/IFirebaseWrapper\";\nimport { IResource, ResourceManager } from \"./ResourceManager\";\n\nexport class FireClient {\n  public rm: ResourceManager;\n\n  constructor(\n    public fireWrapper: IFirebaseWrapper,\n    public options: RAFirebaseOptions,\n    public flogger: IFirestoreLogger\n  ) {\n    this.rm = new ResourceManager(this.fireWrapper, this.options, this.flogger);\n  }\n\n  public checkRemoveIdField(obj: any, docId: string) {\n    if (!this.options.dontAddIdFieldToDoc) {\n      obj.id = docId;\n    }\n  }\n\n  public transformToDb(resourceName: string, documentData: any, docId: string): any {\n    if (typeof this.options.transformToDb === 'function') {\n      return this.options.transformToDb(resourceName, documentData, docId);\n    }\n    return documentData;\n  }\n\n  public async parseDataAndUpload(r: IResource, id: string, data: any) {\n    if (!data) {\n      return data;\n    }\n    const docPath = r.collection.doc(id).path;\n\n    const result = translateDocToFirestore(data);\n    const uploads = result.uploads;\n    await Promise.all(\n      uploads.map(async (u) => {\n        const link = await this.uploadAndGetLink(\n          u.rawFile,\n          docPath,\n          u.fieldSlashesPath,\n          !!this.options.useFileNamesInStorage\n        );\n        set(data, u.fieldDotsPath + \".src\", link);\n      })\n    );\n    return data;\n  }\n\n  public async addCreatedByFields(obj: any) {\n    return AddCreatedByFields(obj, this.fireWrapper, this.rm, this.options);\n  }\n\n  public async addUpdatedByFields(obj: any) {\n    return AddUpdatedByFields(obj, this.fireWrapper, this.rm, this.options);\n  }\n\n  private async uploadAndGetLink(\n    rawFile: any,\n    docPath: string,\n    fieldPath: string,\n    useFileName: boolean\n  ): Promise<string | undefined> {\n    const storagePath = useFileName\n      ? joinPaths(docPath, fieldPath, rawFile.name)\n      : joinPaths(docPath, fieldPath);\n    return this.saveFile(storagePath, rawFile);\n  }\n\n  private async saveFile(\n    storagePath: string,\n    rawFile: any\n  ): Promise<string | undefined> {\n    log(\"saveFile() saving file...\", { storagePath, rawFile });\n    try {\n      const { task, taskResult, downloadUrl } = this.fireWrapper.putFile(storagePath, rawFile);\n      const { name } = rawFile;\n      // monitor upload status & progress\n      dispatch('FILE_UPLOAD_WILL_START', name);\n      task.on('state_changed', (snapshot) => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        log('Upload is ' + progress + '% done');\n        dispatch('FILE_UPLOAD_PROGRESS', name, progress);\n        switch (snapshot.state) {\n          case TASK_PAUSED:\n            log('Upload is paused');\n            dispatch('FILE_UPLOAD_PAUSED', name);\n            break;\n          case TASK_RUNNING:\n            log('Upload is running');\n            dispatch('FILE_UPLOAD_RUNNING', name);\n            break;\n          case TASK_CANCELED:\n            log('Upload has been canceled');\n            dispatch('FILE_UPLOAD_CANCELED', name);\n            break;\n          // case storage.TaskState.ERROR:\n            // already handled by catch\n          // case storage.TaskState.SUCCESS:\n            // already handled by then\n        }\n      });\n      const [getDownloadURL] = await Promise.all([\n        downloadUrl,\n        taskResult,\n      ]);\n      dispatch('FILE_UPLOAD_COMPLETE', name);\n      dispatch('FILE_SAVED', name);\n      log(\"saveFile() saved file\", {\n        storagePath,\n        taskResult,\n        getDownloadURL,\n      });\n      return this.options.relativeFilePaths ? storagePath : getDownloadURL;\n    } catch (storageError) {\n      if (get(storageError, 'code') === \"storage/unknown\") {\n        logError(\n          'saveFile() error saving file, No bucket found! Try clicking \"Get Started\" in firebase -> storage',\n          { storageError }\n        );\n      } else {\n        logError(\"saveFile() error saving file\", {\n          storageError,\n        });\n      }\n    }\n  }\n}\n","import { RAFirebaseOptions } from \"index\";\nimport { IFirebaseWrapper, ResourceManager } from \"providers/database\";\n\nexport async function AddCreatedByFields(\n  obj: any,\n  fireWrapper: IFirebaseWrapper,\n  rm: Pick<ResourceManager, \"getUserIdentifier\">,\n  options: Pick<\n    RAFirebaseOptions,\n    | \"associateUsersById\"\n    | \"disableMeta\"\n    | \"renameMetaFields\"\n    | \"metaFieldCasing\"\n  >\n) {\n  if (options.disableMeta) {\n    return;\n  }\n  const currentUserIdentifier = await rm.getUserIdentifier();\n  const createAtSelector = GetSelectorsCreateAt(options);\n  const createBySelector = GetSelectorsCreateBy(options);\n  obj[createAtSelector] = fireWrapper.serverTimestamp();\n  obj[createBySelector] = currentUserIdentifier;\n}\n\nexport async function AddUpdatedByFields(\n  obj: any,\n  fireWrapper: IFirebaseWrapper,\n  rm: Pick<ResourceManager, \"getUserIdentifier\">,\n  options: Pick<\n    RAFirebaseOptions,\n    | \"associateUsersById\"\n    | \"disableMeta\"\n    | \"renameMetaFields\"\n    | \"metaFieldCasing\"\n  >\n) {\n  if (options.disableMeta) {\n    return;\n  }\n  const currentUserIdentifier = await rm.getUserIdentifier();\n  const updateAtSelector = GetSelectorsUpdateAt(options);\n  const updateBySelector = GetSelectorsUpdateBy(options);\n  obj[updateAtSelector] = fireWrapper.serverTimestamp();\n  obj[updateBySelector] = currentUserIdentifier;\n}\n\nexport function GetSelectorsUpdateAt(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.updated_at) {\n    return options.renameMetaFields.updated_at;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"lastupdate\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"lastUpdate\";\n  }\n  if (casing === \"snake\") {\n    return \"last_update\";\n  }\n  if (casing === \"pascal\") {\n    return \"LastUpdate\";\n  }\n  if (casing === \"kebab\") {\n    return \"last-update\";\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsUpdateBy(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.updated_by) {\n    return options.renameMetaFields.updated_by;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"updatedby\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"updatedBy\";\n  }\n  if (casing === \"snake\") {\n    return \"updated_by\";\n  }\n  if (casing === \"pascal\") {\n    return \"UpdatedBy\";\n  }\n  if (casing === \"kebab\") {\n    return \"updated-by\";\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsCreateAt(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.created_at) {\n    return options.renameMetaFields.created_at;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"createdate\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"createDate\";\n  }\n  if (casing === \"snake\") {\n    return \"create_date\";\n  }\n  if (casing === \"pascal\") {\n    return \"CreateDate\";\n  }\n  if (casing === \"kebab\") {\n    return \"create-date\";\n  }\n  return defautCase;\n}\n\nexport function GetSelectorsCreateBy(\n  options: Pick<RAFirebaseOptions, \"metaFieldCasing\" | \"renameMetaFields\">\n): string {\n  if (options.renameMetaFields && options.renameMetaFields.created_by) {\n    return options.renameMetaFields.created_by;\n  }\n  const casing = options.metaFieldCasing;\n  const defautCase = \"createdby\";\n  if (!casing) {\n    return defautCase;\n  }\n  if (casing === \"camel\") {\n    return \"createdBy\";\n  }\n  if (casing === \"snake\") {\n    return \"created_by\";\n  }\n  if (casing === \"pascal\") {\n    return \"CreatedBy\";\n  }\n  if (casing === \"kebab\") {\n    return \"created-by\";\n  }\n  return defautCase;\n}\n","import { FireStoreCollectionRef, FireStoreDocumentSnapshot, FireStoreQuery } from 'misc/firebase-models';\nimport { IFirestoreLogger, messageTypes } from '../../misc';\n\nexport function setQueryCursor(\n  doc: FireStoreDocumentSnapshot,\n  params: messageTypes.IParamsGetList,\n  resourceName: string\n) {\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\n  localStorage.setItem(key, doc.id);\n\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\n  if (!localCursorKeys) {\n    localStorage.setItem(allCursorsKey, JSON.stringify([key]));\n  } else {\n    const cursors: string[] = JSON.parse(localCursorKeys);\n    const newCursors = cursors.concat(key);\n    localStorage.setItem(allCursorsKey, JSON.stringify(newCursors));\n  }\n}\n\nexport async function getQueryCursor(\n  collection: FireStoreCollectionRef,\n  params: messageTypes.IParamsGetList,\n  resourceName: string,\n  flogger: IFirestoreLogger\n): Promise<FireStoreDocumentSnapshot | false> {\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\n  const docId = localStorage.getItem(key);\n  if (!docId) {\n    return false;\n  }\n\n  const doc = await collection.doc(docId).get();\n  flogger.logDocument(1)();\n  if (doc.exists) {\n    // incrementFirebaseReadsCounter(1);\n    return doc;\n  }\n  return false;\n}\n\nexport function clearQueryCursors(resourceName: string) {\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\n  if (localCursorKeys) {\n    const cursors: string[] = JSON.parse(localCursorKeys);\n    cursors.forEach((cursor) => localStorage.removeItem(cursor));\n    localStorage.removeItem(allCursorsKey);\n  }\n}\n\nexport async function findLastQueryCursor(\n  collection: FireStoreCollectionRef,\n  queryBase: FireStoreQuery,\n  params: messageTypes.IParamsGetList,\n  resourceName: string,\n  flogger: IFirestoreLogger\n) {\n  const { page, perPage } = params.pagination;\n\n  let lastQueryCursor: FireStoreDocumentSnapshot | false = false;\n  let currentPage = page - 1;\n\n  const currentPageParams = {\n    ...params,\n    pagination: {\n      ...params.pagination,\n    },\n  };\n  while (!lastQueryCursor && currentPage > 1) {\n    currentPage--;\n    currentPageParams.pagination.page = currentPage;\n    console.log('getting query cursor currentPage=', currentPage);\n    lastQueryCursor = await getQueryCursor(\n      collection,\n      currentPageParams,\n      resourceName,\n      flogger\n    );\n  }\n  const limit = (page - currentPage) * perPage;\n  const isFirst = currentPage === 1;\n\n  function getQuery() {\n    if (isFirst) {\n      return queryBase.limit(limit);\n    } else {\n      return queryBase.startAt(lastQueryCursor).limit(limit);\n    }\n  }\n\n  const newQuery = getQuery();\n  const snapshots = await newQuery.get();\n  const docsLength = snapshots.docs.length;\n  flogger.logDocument(docsLength)();\n  const lastDocIndex = docsLength - 1;\n  const lastDocRef = snapshots.docs[lastDocIndex];\n  return lastDocRef;\n}\n","import { FireStoreCollectionRef, FireStoreQuery, FireStoreQueryOrder } from 'misc/firebase-models';\nimport { IFirestoreLogger, messageTypes } from '../../misc';\nimport { findLastQueryCursor, getQueryCursor } from './queryCursors';\n\ninterface ParamsToQueryOptions {\n  filters?: boolean;\n  sort?: boolean;\n  pagination?: boolean;\n}\n\nconst defaultParamsToQueryOptions = {\n  filters: true,\n  sort: true,\n  pagination: true,\n};\n\nexport async function paramsToQuery<\n  TParams extends messageTypes.IParamsGetList\n>(\n  collection: FireStoreCollectionRef,\n  params: TParams,\n  resourceName: string,\n  flogger: IFirestoreLogger,\n  options: ParamsToQueryOptions = defaultParamsToQueryOptions\n): Promise<FireStoreQuery> {\n  const filtersStepQuery = options.filters\n    ? filtersToQuery(collection, params.filter)\n    : collection;\n\n  const sortStepQuery = options.sort\n    ? sortToQuery(filtersStepQuery, params.sort)\n    : filtersStepQuery;\n\n  return options.pagination\n    ? paginationToQuery(\n        sortStepQuery,\n        params,\n        collection,\n        resourceName,\n        flogger\n      )\n    : sortStepQuery;\n}\n\nexport function filtersToQuery(\n  query: FireStoreQuery,\n  filters: { [fieldName: string]: any }\n): FireStoreQuery {\n  const res = Object.entries(filters).reduce((acc,[fieldName, fieldValue]) => {\n    const opStr = fieldValue && Array.isArray(fieldValue) ? (fieldName.slice(-1) === 's' ? 'array-contains-any' : 'in') : '==';\n    return acc.where(fieldName, opStr, fieldValue);\n  }, query);\n  return res;\n}\n\nexport function sortToQuery(\n  query: FireStoreQuery,\n  sort: { field: string; order: string }\n): FireStoreQuery {\n  if (sort != null && sort.field !== 'id') {\n    const { field, order } = sort;\n    const parsedOrder = order.toLocaleLowerCase() as FireStoreQueryOrder;\n    return query.orderBy(field, parsedOrder);\n  }\n  return query;\n}\n\nasync function paginationToQuery<TParams extends messageTypes.IParamsGetList>(\n  query: FireStoreQuery,\n  params: TParams,\n  collection: FireStoreCollectionRef,\n  resourceName: string,\n  flogger: IFirestoreLogger\n): Promise<FireStoreQuery> {\n  const { page, perPage } = params.pagination;\n  if (page === 1) {\n    query = query.limit(perPage);\n  } else {\n    let queryCursor = await getQueryCursor(\n      collection,\n      params,\n      resourceName,\n      flogger\n    );\n    if (!queryCursor) {\n      queryCursor = await findLastQueryCursor(\n        collection,\n        query,\n        params,\n        resourceName,\n        flogger\n      );\n    }\n    query = query.startAfter(queryCursor).limit(perPage);\n  }\n\n  return query;\n}\n\nexport function getFullParamsForQuery<\n  TParams extends messageTypes.IParamsGetList\n>(reactAdminParams: TParams, softdeleteEnabled: boolean): TParams {\n  return {\n    ...reactAdminParams,\n    filter: softdeleteEnabled\n      ? {\n          deleted: false,\n          ...reactAdminParams.filter,\n        }\n      : reactAdminParams.filter,\n  };\n}\n\nexport function getNextPageParams<TParams extends messageTypes.IParamsGetList>(\n  params: TParams\n): TParams {\n  return {\n    ...params,\n    pagination: {\n      ...params.pagination,\n      page: params.pagination.page + 1,\n    },\n  };\n}\n","import {\n  log,\n  messageTypes,\n  parseFireStoreDocument,\n  recursivelyMapStorageUrls,\n} from '../../misc';\nimport { IResource, ResourceManager } from '../database/ResourceManager';\nimport { RAFirebaseOptions } from '../options';\nimport * as ra from '../../misc/react-admin-models';\nimport {\n  getFullParamsForQuery,\n  getNextPageParams,\n  paramsToQuery,\n} from './paramsToQuery';\nimport { clearQueryCursors, setQueryCursor } from './queryCursors';\nimport { FireClient } from 'providers/database';\nimport { FireStoreCollectionRef, FireStoreDocumentSnapshot } from 'misc/firebase-models';\n\nexport class FirebaseLazyLoadingClient {\n  constructor(\n    private readonly options: RAFirebaseOptions,\n    private readonly rm: ResourceManager,\n    private client: FireClient\n  ) {}\n\n  public async apiGetList<T extends ra.Record>(\n    resourceName: string,\n    reactAdminParams: ra.GetListParams\n  ): Promise<ra.GetListResult<T>> {\n    const r = await this.tryGetResource(resourceName);\n    const params = getFullParamsForQuery(\n      reactAdminParams,\n      !!this.options.softDelete\n    );\n\n    log('apiGetListLazy', { resourceName, params });\n\n    const query = await paramsToQuery(\n      r.collection,\n      params,\n      resourceName,\n      this.client.flogger\n    );\n\n    const snapshots = await query.get();\n\n    const resultsCount = snapshots.docs.length;\n    if (!resultsCount) {\n      log('apiGetListLazy', {\n        message: 'There are not records for given query',\n      });\n      return { data: [], total: 0 };\n    }\n    this.client.flogger.logDocument(resultsCount)();\n\n    const data = snapshots.docs.map(doc => parseFireStoreDocument<T>(doc));\n    const nextPageCursor = snapshots.docs[snapshots.docs.length - 1];\n    // After fetching documents save queryCursor for next page\n    setQueryCursor(nextPageCursor, getNextPageParams(params), resourceName);\n    // Hardcoded to allow next pages, as we don't have total number of items\n    let total = 9000;\n\n    // Check for next pages\n    // If it's last page, we can count all items and disable going to next page\n    const isOnLastPage = await this.checkIfOnLastPage(\n      r.collection,\n      params,\n      resourceName,\n      nextPageCursor\n    );\n\n    if (isOnLastPage) {\n      const { page, perPage } = params.pagination;\n      total = (page - 1) * perPage + data.length;\n      log('apiGetListLazy', { message: \"It's last page of collection.\" });\n    }\n\n    if (this.options.relativeFilePaths) {\n      const parsedData = await Promise.all(\n        data.map(async (doc: any) => {\n          for (let fieldName in doc) {\n            doc[fieldName] = await recursivelyMapStorageUrls(\n              this.client.fireWrapper,\n              doc[fieldName]\n            );\n          }\n          return doc;\n        })\n      );\n\n      log('apiGetListLazy result', {\n        docs: parsedData,\n        resource: r,\n        collectionPath: r.collection.path,\n      });\n\n      return {\n        data: parsedData,\n        total,\n      };\n    }\n\n    log('apiGetListLazy result', {\n      docs: data,\n      resource: r,\n      collectionPath: r.collection.path,\n    });\n\n    return { data, total };\n  }\n\n  public async apiGetManyReference(\n    resourceName: string,\n    reactAdminParams: messageTypes.IParamsGetManyReference\n  ): Promise<messageTypes.IResponseGetManyReference> {\n    const r = await this.tryGetResource(resourceName);\n    log('apiGetManyReferenceLazy', {\n      resourceName,\n      resource: r,\n      reactAdminParams,\n    });\n    const filterWithTarget = {\n      ...reactAdminParams.filter,\n      [reactAdminParams.target]: reactAdminParams.id,\n    };\n    const params = getFullParamsForQuery(\n      {\n        ...reactAdminParams,\n        filter: filterWithTarget,\n      },\n      !!this.options.softDelete\n    );\n\n    const query = await paramsToQuery(\n      r.collection,\n      params,\n      resourceName,\n      this.client.flogger\n    );\n\n    const snapshots = await query.get();\n    const resultsCount = snapshots.docs.length;\n    this.client.flogger.logDocument(resultsCount)();\n    const data = snapshots.docs.map(d => parseFireStoreDocument(d));\n    if (this.options.relativeFilePaths) {\n      const parsedData = await Promise.all(\n        data.map(async (doc: any) => {\n          for (let fieldName in doc) {\n            doc[fieldName] = await recursivelyMapStorageUrls(\n              this.client.fireWrapper,\n              doc[fieldName]\n            );\n          }\n          return doc;\n        })\n      );\n\n      log('apiGetManyReferenceLazy result', {\n        docs: parsedData,\n        resource: r,\n        collectionPath: r.collection.path,\n      });\n\n      return {\n        data: parsedData,\n        total: data.length,\n      };\n    }\n\n    log('apiGetManyReferenceLazy result', {\n      docs: data,\n      resource: r,\n      collectionPath: r.collection.path,\n    });\n    return { data, total: data.length };\n  }\n\n  private async checkIfOnLastPage<TParams extends messageTypes.IParamsGetList>(\n    collection: FireStoreCollectionRef,\n    params: TParams,\n    resourceName: string,\n    nextPageCursor: FireStoreDocumentSnapshot,\n  ): Promise<boolean> {\n    const query = await paramsToQuery(\n      collection,\n      params,\n      resourceName,\n      this.client.flogger,\n      {\n        filters: true,\n        sort: true,\n      }\n    );\n    if (!nextPageCursor) {\n      throw new Error('Page cursor was empty...');\n    }\n    const nextElementSnapshot = await query\n      .startAfter(nextPageCursor)\n      .limit(1)\n      .get();\n\n    if (!nextElementSnapshot.empty) {\n      // this.incrementFirebaseReadsCounter(1);\n    }\n\n    return nextElementSnapshot.empty;\n  }\n\n  public clearQueryCursors(resourceName: string) {\n    clearQueryCursors(resourceName);\n  }\n\n  private async tryGetResource(\n    resourceName: string,\n    collectionQuery?: messageTypes.CollectionQueryType\n  ): Promise<IResource> {\n    return this.rm.TryGetResourcePromise(resourceName, collectionQuery);\n  }\n}\n","import { messageTypes } from './../misc/messageTypes';\nimport { log, retrieveStatusTxt, logWarn, logger } from '../misc';\nimport { RAFirebaseOptions } from './options';\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\nimport {\n  AuthProvider as RaAuthProvider,\n  UserIdentity,\n} from '../misc/react-admin-models';\nimport { IFirebaseWrapper } from './database';\nimport { FireUser } from '../misc/firebase-models';\n\nclass AuthClient {\n  private fireWrapper: IFirebaseWrapper;\n\n  constructor(firebaseConfig: {}, optionsInput?: RAFirebaseOptions) {\n    const options = optionsInput || {};\n    log('Auth Client: initializing...', { firebaseConfig, options });\n    this.fireWrapper = new FirebaseWrapper(options, firebaseConfig);\n    options.persistence && this.setPersistence(options.persistence);\n  }\n\n  setPersistence(persistenceInput: 'session' | 'local' | 'none') {\n    return this.fireWrapper.authSetPersistence(persistenceInput);\n  }\n\n  public async HandleAuthLogin(params: { username: string; password: string }) {\n    const { username, password } = params;\n\n    if (username && password) {\n      try {\n        const user = await this.fireWrapper.authSigninEmailPassword(\n          username,\n          password\n        );\n        log('HandleAuthLogin: user sucessfully logged in', { user });\n        return user;\n      } catch (e) {\n        log('HandleAuthLogin: invalid credentials', { params });\n        throw new Error('Login error: invalid credentials');\n      }\n    } else {\n      return this.getUserLogin();\n    }\n  }\n\n  public HandleAuthLogout() {\n    return this.fireWrapper.authSignOut();\n  }\n\n  public HandleAuthError(errorHttp: messageTypes.HttpErrorType) {\n    log('HandleAuthLogin: invalid credentials', { errorHttp });\n    const status = !!errorHttp && errorHttp.status;\n    const statusTxt = retrieveStatusTxt(status);\n    if (statusTxt === 'ok') {\n      log('API is actually authenticated');\n      return Promise.resolve();\n    }\n    logWarn('Recieved authentication error from API');\n    return Promise.reject();\n  }\n\n  public async HandleAuthCheck(): Promise<any> {\n    return this.getUserLogin();\n  }\n\n  public getUserLogin(): Promise<FireUser> {\n    return this.fireWrapper.authGetUserLoggedIn();\n  }\n\n  public async HandleGetPermissions() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.claims;\n    } catch (e) {\n      log('HandleGetPermission: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n\n  public async HandleGetIdentity(): Promise<UserIdentity> {\n    try {\n      const { uid, displayName, photoURL } = await this.getUserLogin();\n      const identity: UserIdentity = {\n        id: uid,\n        fullName: `${displayName ?? ''}`,\n        avatar: `${photoURL ?? ''}`,\n      };\n      return identity;\n    } catch (e) {\n      log('HandleGetIdentity: no user is logged in', {\n        e,\n      });\n      return null as any;\n    }\n  }\n\n  public async HandleGetJWTAuthTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.authTime;\n    } catch (e) {\n      log('HandleGetJWTAuthTime: no user is logged in or tokenResult error', {\n        e,\n      });\n      return null;\n    }\n  }\n\n  public async HandleGetJWTExpirationTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.expirationTime;\n    } catch (e) {\n      log(\n        'HandleGetJWTExpirationTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTSignInProvider() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.signInProvider;\n    } catch (e) {\n      log(\n        'HandleGetJWTSignInProvider: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTIssuedAtTime() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.issuedAtTime;\n    } catch (e) {\n      log(\n        'HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n\n  public async HandleGetJWTToken() {\n    try {\n      const user = await this.getUserLogin();\n      // @ts-ignore\n      const token = await user.getIdTokenResult();\n\n      return token.token;\n    } catch (e) {\n      log(\n        'HandleGetJWTToken: no user is logged in or tokenResult error',\n        {\n          e,\n        }\n      );\n      return null;\n    }\n  }\n}\n\nexport function AuthProvider(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n): ReactAdminFirebaseAuthProvider {\n  VerifyAuthProviderArgs(firebaseConfig, options);\n  logger.SetEnabled(!!options?.logging);\n  const auth = new AuthClient(firebaseConfig, options);\n\n  const provider: ReactAdminFirebaseAuthProvider = {\n    // React Admin Interface\n    login: (params) => auth.HandleAuthLogin(params),\n    logout: () => auth.HandleAuthLogout(),\n    checkAuth: () => auth.HandleAuthCheck(),\n    checkError: (error) => auth.HandleAuthError(error),\n    getPermissions: () => auth.HandleGetPermissions(),\n    getIdentity: () => auth.HandleGetIdentity(),\n    // Custom Functions\n    getAuthUser: () => auth.getUserLogin(),\n    getJWTAuthTime: () => auth.HandleGetJWTAuthTime(),\n    getJWTExpirationTime: () => auth.HandleGetJWTExpirationTime(),\n    getJWTSignInProvider: () => auth.HandleGetJWTSignInProvider(),\n    getJWTClaims: () => auth.HandleGetPermissions(),\n    getJWTToken: () => auth.HandleGetJWTToken(),\n  };\n  return provider;\n}\n\nexport type ReactAdminFirebaseAuthProvider = RaAuthProvider & {\n  // Custom Functions\n  getAuthUser: () => Promise<FireUser>,\n  getJWTAuthTime: () => Promise<string | null>,\n  getJWTExpirationTime: () => Promise<string | null>,\n  getJWTSignInProvider: () => Promise<string | null>,\n  getJWTClaims: () => Promise<{ [key: string]: any; } | null>,\n  getJWTToken: () => Promise<string | null>,  \n}\n\nfunction VerifyAuthProviderArgs(\n  firebaseConfig: {},\n  options: RAFirebaseOptions\n) {\n  const hasNoApp = !options || !options.app;\n  const hasNoConfig = !firebaseConfig;\n  if (hasNoConfig && hasNoApp) {\n    throw new Error(\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\n    );\n  }\n}\n","// From firebase SDK\n\nimport { logError } from \"./logger\";\n\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\nexport function retrieveStatusTxt(status: number): 'ok' | 'unauthenticated' {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 401: // 'unauthenticated'\n    case 403: // 'permission-denied'\n      return 'unauthenticated';\n\n    case 0: // 'internal'\n    case 400: // 'invalid-argument'\n    case 404: // 'not-found'\n    case 409: // 'aborted'\n    case 429: // 'resource-exhausted'\n    case 499: // 'cancelled'\n    case 500: // 'internal'\n    case 501: // 'unimplemented'\n    case 503: // 'unavailable'\n    case 504: // 'deadline-exceeded'\n    default:\n      // ignore\n      return 'ok';\n  }\n}\n\n// From firebase SDK\n// tslint:disable-next-line:max-line-length\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\nexport function retrieveStatusCode(statusTxt: string): number {\n  // Make sure any successful status is OK.\n  const regexResult = /\\[code\\=([\\w-]*)/g.exec(statusTxt);\n  const status = Array.isArray(regexResult) && regexResult[1];\n  if (!status) {\n    logError('unknown StatusCode ', {statusTxt});\n  }\n  switch (status) {\n    case 'unauthenticated':\n      return 401;\n    case 'permission-denied':\n      return 403;\n    case 'internal':\n      return 0;\n    case 'invalid-argument':\n      return 400;\n    case 'not-found':\n      return 404;\n    case 'aborted':\n      return 409;\n    case 'resource-exhausted':\n      return 429;\n    case 'cancelled':\n      return 499;\n    case 'internal':\n      return 500;\n    case 'unimplemented':\n      return 501;\n    case 'unavailable':\n      return 503;\n    case 'deadline-exceeded':\n      return 504;\n    default:\n      return 200;\n  }\n}\n","import {\n  getAbsolutePath,\n  log,\n  logger,\n  retrieveStatusCode,\n  logError,\n  MakeFirestoreLogger,\n} from \"../misc\";\nimport * as ra from \"../misc/react-admin-models\";\nimport { RAFirebaseOptions } from \"./options\";\nimport { FirebaseWrapper } from \"./database/firebase/FirebaseWrapper\";\nimport { FireApp } from \"../misc/firebase-models\";\nimport { FireClient } from \"./database/FireClient\";\nimport { GetList, GetMany, GetManyReference, GetOne } from \"./queries\";\nimport { Create, Delete, DeleteMany, Update, UpdateMany } from \"./commands\";\n\nexport interface IDataProvider extends ra.DataProvider {\n  app: FireApp;\n}\n\nexport function DataProvider(\n  firebaseConfig: {},\n  optionsInput?: RAFirebaseOptions\n): IDataProvider {\n  const options = optionsInput || {};\n  verifyDataProviderArgs(firebaseConfig, options);\n\n  const flogger = MakeFirestoreLogger(options);\n  logger.SetEnabled(!!options?.logging);\n  flogger.SetEnabled(!!options?.firestoreCostsLogger?.enabled);\n  flogger.ResetCount(!options?.firestoreCostsLogger?.persistCount);\n  log('Creating FirebaseDataProvider', {\n    firebaseConfig,\n    options\n  });\n\n  const fireWrapper = new FirebaseWrapper(optionsInput, firebaseConfig);\n\n  async function run<T>(cb: () => Promise<T>) {\n    let res: any;\n    try {\n      res = await cb();\n      return res;\n    } catch (error) {\n      const errorMsg = ((error as any) || '').toString();\n      const code = retrieveStatusCode(errorMsg);\n      const errorObj = { status: code, message: errorMsg, json: res };\n      logError(\"DataProvider:\", error, { errorMsg, code, errorObj });\n      throw errorObj;\n    }\n  }\n  const client = new FireClient(fireWrapper, options, flogger);\n\n  const newProviderApi: IDataProvider = {\n    app: fireWrapper.GetApp(),\n    getList<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetListParams\n    ): Promise<ra.GetListResult<RecordType>> {\n      return run(() => GetList<RecordType>(resource, params, client));\n    },\n    getOne<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetOneParams\n    ): Promise<ra.GetOneResult<RecordType>> {\n      return run(() => GetOne<RecordType>(resource, params, client));\n    },\n    getMany<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetManyParams\n    ): Promise<ra.GetManyResult<RecordType>> {\n      return run(() => GetMany<RecordType>(resource, params, client));\n    },\n    getManyReference<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.GetManyReferenceParams\n    ): Promise<ra.GetManyReferenceResult<RecordType>> {\n      return run(() =>\n        GetManyReference<RecordType>(resource, params, client)\n      );\n    },\n    update<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.UpdateParams\n    ): Promise<ra.UpdateResult<RecordType>> {\n      return run(() => Update<RecordType>(resource, params, client));\n    },\n    updateMany(\n      resource: string,\n      params: ra.UpdateManyParams\n    ): Promise<ra.UpdateManyResult> {\n      return run(() => UpdateMany(resource, params, client));\n    },\n    create<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.CreateParams\n    ): Promise<ra.CreateResult<RecordType>> {\n      return run(() => Create<RecordType>(resource, params, client));\n    },\n    delete<RecordType extends ra.Record = ra.Record>(\n      resource: string,\n      params: ra.DeleteParams\n    ): Promise<ra.DeleteResult<RecordType>> {\n      return run(() => Delete(resource, params, client));\n    },\n    deleteMany(\n      resource: string,\n      params: ra.DeleteManyParams\n    ): Promise<ra.DeleteManyResult> {\n      return run(() => DeleteMany(resource, params, client));\n    },\n  };\n\n  return newProviderApi;\n}\n\nfunction verifyDataProviderArgs(\n  firebaseConfig: {},\n  options?: RAFirebaseOptions\n) {\n  const hasNoApp = !options || !options.app;\n  const hasNoConfig = !firebaseConfig;\n  if (hasNoConfig && hasNoApp) {\n    throw new Error(\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\n    );\n  }\n  if (options && options.rootRef) {\n    // Will throw error if rootRef doesn't point to a document\n    getAbsolutePath(options.rootRef, 'test');\n  }\n}\n","import { FireClient } from '../database/FireClient';\nimport { FirebaseLazyLoadingClient } from '../lazy-loading/FirebaseLazyLoadingClient';\nimport {\n  filterArray,\n  log,\n  recursivelyMapStorageUrls,\n  sortArray,\n} from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\n\nexport async function GetList<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetListParams,\n  client: FireClient\n): Promise<ra.GetListResult<T>> {\n  log('GetList', { resourceName, params });\n  const { rm, fireWrapper, options } = client;\n\n  if (options?.lazyLoading?.enabled) {\n    const lazyClient = new FirebaseLazyLoadingClient(\n      options,\n      rm,\n      client\n    );\n    return lazyClient.apiGetList<T>(resourceName, params);\n  }\n\n  const filterSafe = params.filter || {};\n\n  const collectionQuery = filterSafe.collectionQuery;\n  delete filterSafe.collectionQuery;\n\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\n  const data = r.list;\n  if (params.sort != null) {\n    const { field, order } = params.sort;\n    if (order === 'ASC') {\n      sortArray(data, field, 'asc');\n    } else {\n      sortArray(data, field, 'desc');\n    }\n  }\n  let softDeleted = data;\n  if (options.softDelete && !Object.keys(filterSafe).includes('deleted')) {\n    softDeleted = data.filter((doc) => !doc.deleted);\n  }\n  const filteredData = filterArray(softDeleted, filterSafe);\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\n  const pageEnd = pageStart + params.pagination.perPage;\n  const dataPage = filteredData.slice(pageStart, pageEnd) as T[];\n  const total = filteredData.length;\n\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      dataPage.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\n    );\n    return {\n      data,\n      total,\n    };\n  }\n\n  return {\n    data: dataPage,\n    total,\n  };\n}\n","import { FireClient } from '../database/FireClient';\nimport { log, translateDocFromFirestore } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\n\nexport async function GetOne<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetOneParams,\n  client: FireClient\n): Promise<ra.GetOneResult<T>> {\n  log(\"GetOne\", { resourceName, params });\n  const { rm } = client;\n  try {\n    const id = params.id + '';\n    const dataSingle = await rm.GetSingleDoc(resourceName, id);\n    client.flogger.logDocument(1)();\n    return { data: dataSingle as T };\n  } catch (error) {\n    throw new Error(\n      'Error getting id: ' + params.id + ' from collection: ' + resourceName\n    );\n  }\n}\n","import { FireClient } from '../database/FireClient';\nimport { log, recursivelyMapStorageUrls } from '../../misc';\nimport * as ra from '../../misc/react-admin-models';\n\nexport async function GetMany<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetManyParams,\n  client: FireClient\n): Promise<ra.GetManyResult<T>> {\n  const { rm, options, fireWrapper } = client;\n  const r = await rm.TryGetResource(resourceName);\n  const ids = params.ids;\n  log(\"GetMany\", { resourceName, resource: r, params, ids });\n  const matchDocSnaps = await Promise.all(\n    ids.map(idObj => {\n      if (typeof idObj === 'string') {\n        return r.collection.doc(idObj).get()\n      }\n      // Will get and resolve reference documents into the current doc\n      return r.collection.doc((idObj as any)['___refid']).get()\n    })\n  );\n  client.flogger.logDocument(ids.length)();\n  const matches = matchDocSnaps.map((snap) => {\n    return { ...snap.data(), id: snap.id } as T;\n  });\n  const permittedData = options.softDelete\n    ? matches.filter((row) => !row['deleted'])\n    : matches;\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      permittedData.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\n    );\n    return {\n      data,\n    };\n  }\n\n  return {\n    data: permittedData,\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { filterArray, log, recursivelyMapStorageUrls, sortArray } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function GetManyReference<T extends ra.Record>(\n  resourceName: string,\n  params: ra.GetManyReferenceParams,\n  client: FireClient\n): Promise<ra.GetManyReferenceResult<T>> {\n  const { rm, options, fireWrapper } = client;\n  log(\"GetManyReference\", { resourceName, params });\n  const filterSafe = params.filter || {};\n  const collectionQuery = filterSafe.collectionQuery;\n  const r = await rm.TryGetResource(\n    resourceName,\n    \"REFRESH\",\n    collectionQuery\n  );\n  delete filterSafe.collectionQuery;\n  log(\"apiGetManyReference\", { resourceName, resource: r, params });\n  const data = r.list;\n  const targetField = params.target;\n  const targetValue = params.id;\n  let softDeleted = data;\n  if (options.softDelete) {\n    softDeleted = data.filter(doc => !doc['deleted'])\n  }\n  const filteredData = filterArray(softDeleted, filterSafe);\n  const targetIdFilter: Record<string, ra.Identifier> = {};\n  targetIdFilter[targetField] = targetValue;\n  const permittedData = filterArray(filteredData, targetIdFilter);\n  if (params.sort != null) {\n    const { field, order } = params.sort;\n    if (order === \"ASC\") {\n      sortArray(permittedData, field, \"asc\");\n    } else {\n      sortArray(permittedData, field, \"desc\");\n    }\n  }\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\n  const pageEnd = pageStart + params.pagination.perPage;\n  const dataPage = permittedData.slice(pageStart, pageEnd) as T[];\n  const total = permittedData.length;\n\n  if (options.relativeFilePaths) {\n    const data = await Promise.all(\n      permittedData.map((doc) =>\n        recursivelyMapStorageUrls(fireWrapper, doc)\n      )\n    );\n    return { data, total };\n  }\n\n  return { data: dataPage, total };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function Update<T extends ra.Record>(\n  resourceName: string,\n  params: ra.UpdateParams,\n  client: FireClient\n): Promise<ra.UpdateResult<T>> {\n  const { rm } = client;\n  log(\"Update\", { resourceName, params });\n  const id = params.id + \"\";\n  delete params.data.id;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"Update\", { resourceName, resource: r, params });\n  const data = await client.parseDataAndUpload(r, id, params.data);\n  const docObj = { ...data };\n  client.checkRemoveIdField(docObj, id);\n  await client.addUpdatedByFields(docObj);\n  const docObjTransformed = client.transformToDb(resourceName, docObj, id);\n  await r.collection.doc(id).update(docObjTransformed);\n  return {\n    data: {\n      ...data,\n      id: id,\n    },\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function UpdateMany(\n  resourceName: string,\n  params: ra.UpdateManyParams,\n  client: FireClient\n): Promise<ra.UpdateManyResult> {\n  const { rm } = client;\n  log(\"UpdateMany\", { resourceName, params });\n  delete params.data.id;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"UpdateMany\", { resourceName, resource: r, params });\n  const ids = params.ids;\n  const returnData = await Promise.all(\n    ids.map(async id => {\n      const idStr = id+'';\n      const data = await client.parseDataAndUpload(r, idStr, params.data);\n      const docObj = { ...data };\n      client.checkRemoveIdField(docObj, idStr);\n      await client.addUpdatedByFields(docObj);\n      const docObjTransformed = client.transformToDb(resourceName, docObj, idStr);\n      await r.collection\n        .doc(idStr)\n        .update(docObjTransformed);\n      return {\n        ...data,\n        id: idStr\n      };\n    })\n  );\n  return {\n    data: returnData\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function Create<T extends ra.Record>(\n  resourceName: string,\n  params: ra.CreateParams,\n  client: FireClient\n): Promise<ra.CreateResult<T>> {\n  const { rm, fireWrapper } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"Create\", { resourceName, resource: r, params });\n  const hasOverridenDocId = params.data && params.data.id;\n  log(\"Create\", { hasOverridenDocId });\n  if (hasOverridenDocId) {\n    const overridenId = params.data.id;\n    const exists = (await r.collection.doc(overridenId).get()).exists;\n    if (exists) {\n      throw new Error(\n        `the id:\"${overridenId}\" already exists, please use a unique string if overriding the 'id' field`\n      );\n    }\n    const data = await client.parseDataAndUpload(r, overridenId, params.data);\n    if (!overridenId) {\n      throw new Error(\"id must be a valid string\");\n    }\n    const docObj = { ...data };\n    client.checkRemoveIdField(docObj, overridenId);\n    await client.addCreatedByFields(docObj);\n    await client.addUpdatedByFields(docObj);\n    const docObjTransformed = client.transformToDb(resourceName, docObj, overridenId);\n    log(\"Create\", { docObj });\n    await r.collection.doc(overridenId).set(docObjTransformed, { merge: false });\n    return {\n      data: {\n        ...docObjTransformed,\n        id: overridenId,\n      },\n    };\n  }\n  const newId = fireWrapper.dbMakeNewId();\n  const data = await client.parseDataAndUpload(r, newId, params.data);\n  const docObj = { ...data };\n  client.checkRemoveIdField(docObj, newId);\n  await client.addCreatedByFields(docObj);\n  await client.addUpdatedByFields(docObj);\n  const docObjTransformed = client.transformToDb(resourceName, docObj, newId);\n  await r.collection.doc(newId).set(docObjTransformed, { merge: false });\n  return {\n    data: {\n      ...docObjTransformed,\n      id: newId,\n    },\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\nimport { DeleteSoft } from \"./Delete.Soft\";\n\nexport async function Delete<T extends ra.Record>(\n  resourceName: string,\n  params: ra.DeleteParams,\n  client: FireClient\n): Promise<ra.DeleteResult<T>> {\n  const { rm, options } = client;\n  if (options.softDelete) {\n    return DeleteSoft(resourceName, params, client);\n  }\n  const r = await rm.TryGetResource(resourceName);\n  log(\"apiDelete\", { resourceName, resource: r, params });\n  try {\n    const id = params.id + \"\";\n    await r.collection.doc(id).delete();\n  } catch (error) {\n    throw new Error(error as any);\n  }\n  return {\n    data: params.previousData as T,\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log, logError } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function DeleteSoft<T extends ra.Record>(\n  resourceName: string,\n  params: ra.DeleteParams,\n  client: FireClient\n): Promise<ra.DeleteResult<T>> {\n  const { rm } = client;\n  const id = params.id + \"\";\n  const r = await rm.TryGetResource(resourceName);\n  log(\"DeleteSoft\", { resourceName, resource: r, params });\n  const docObj = { deleted: true };\n  await client.addUpdatedByFields(docObj);\n  r.collection\n    .doc(id)\n    .update(docObj)\n    .catch((error) => {\n      logError(\"DeleteSoft error\", { error });\n    });\n  return {\n    data: params.previousData as T,\n  };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\nimport { DeleteManySoft } from \"./DeleteMany.Soft\";\n\nexport async function DeleteMany(\n  resourceName: string,\n  params: ra.DeleteManyParams,\n  client: FireClient\n): Promise<ra.DeleteManyResult> {\n  const { options, rm, fireWrapper } = client;\n  if (options.softDelete) {\n    return DeleteManySoft(resourceName, params, client);\n  }\n  const r = await rm.TryGetResource(resourceName);\n  log(\"DeleteMany\", { resourceName, resource: r, params });\n  const returnData: ra.Identifier[] = [];\n  const batch = fireWrapper.dbCreateBatch();\n  for (const id of params.ids) {\n    const idStr = id + '';\n    const docToDelete = r.collection.doc(idStr);\n    batch.delete(docToDelete);\n    returnData.push(id);\n  }\n  try {\n    await batch.commit();\n  } catch (error) {\n    throw new Error(error as any)\n  }\n  return { data: returnData };\n}\n","import { FireClient } from \"../database/FireClient\";\nimport { log, logError } from \"../../misc\";\nimport * as ra from \"../../misc/react-admin-models\";\n\nexport async function DeleteManySoft(\n  resourceName: string,\n  params: ra.DeleteManyParams,\n  client: FireClient\n): Promise<ra.DeleteManyResult> {\n  const { rm } = client;\n  const r = await rm.TryGetResource(resourceName);\n  log(\"DeleteManySoft\", { resourceName, resource: r, params });\n  const ids = params.ids;\n  const returnData = await Promise.all(\n    ids.map(async (id) => {\n      const idStr = id + \"\";\n      const docObj = { deleted: true };\n      await client.addUpdatedByFields(docObj);\n      r.collection\n        .doc(idStr)\n        .update(docObj)\n        .catch((error) => {\n          logError(\"apiSoftDeleteMany error\", { error });\n        });\n      return idStr;\n    })\n  );\n  return {\n    data: returnData,\n  };\n}\n"],"names":["data","field","dir","sort","a","b","get","rawB","isAsc","Number","isFinite","rawA","basicSort","toLowerCase","Date","aValue","bValue","filterArray","searchFields","isEmpty","searchObjs","Object","keys","map","fieldName","getSubObjects","value","searchField","searchValue","tree","leaves","obj","path","key","hasOwnProperty","objVal","Array","recursivelyWalk","currentPath","push","getFieldReferences","apply","filter","row","reduce","acc","cur","res","doesRowMatch","searchThis","toString","includes","isArray","LogNoOp","LoggerBase","title","cacheEnabledKey","this","_proto","prototype","isEnabled","localStorage","getItem","SetEnabled","setItem","removeItem","console","log","bind","warn","error","logger","logError","KEY_SINGLE","dispatch","eventName","fileName","eventMonitor","document","getElementById","event","CustomEvent","detail","dispatchEvent","REF_INDENTIFIER","translateDocFromFirestore","result","parsedDoc","refdocs","recusivelyCheckObjectValue","input","fieldPath","toDate","index","isInputADocReference","refDocPath","ref","id","firestore","parent","recursivelyMapStorageUrls","fireWrapper","fieldValue","_exit2","_temp3","_result","Promise","all","then","_recursivelyMapStorag","e","reject","resolve","isFileField","has","storage","src","getDownloadURL","_catch","_temp4","parseFireStoreDocument","doc","logWarn","refDocs","d","set","applyRefDocs","dataWithRefs","getAbsolutePath","rootRef","relativePath","Error","rootRefValue","withSlashes","join","split","length","slice","joinPaths","call","arguments","translateDocToFirestore","uploads","recusivelyParseObjectValue","fieldDotsPath","refPath","fieldSlashesPath","rawFile","FirebaseWrapper","inputOptions","firebaseConfig","app","options","optionsSafe","window","_firebase$apps","firebase","apps","initializeApp","ObtainFirebaseApp","dbGetCollection","absolutePath","collection","dbCreateBatch","batch","dbMakeNewId","OnUserLogout","callBack","auth","onAuthStateChanged","user","isLoggedOut","putFile","storagePath","task","put","taskResult","rej","downloadUrl","t","url","getStorageDownloadUrl","fieldSrc","serverTimestamp","FieldValue","authSetPersistence","persistenceInput","persistenceResolved","Auth","Persistence","LOCAL","NONE","SESSION","setPersistence","authSigninEmailPassword","email","password","signInWithEmailAndPassword","authSignOut","signOut","authGetUserLoggedIn","_this10","currentUser","unsubscribe","GetUserLogin","GetApp","db","TASK_PAUSED","TaskState","PAUSED","TASK_RUNNING","RUNNING","TASK_CANCELED","CANCELED","ResourceManager","flogger","_this","resources","TryGetResource","resourceName","refresh","collectionQuery","_this3","TryGetResourcePromise","RefreshResource","GetResource","resource","_this5","initPath","_this7$options","_this7$options$lazyLo","_this7","lazyLoading","enabled","query","applyQuery","newDocs","list","docs","logDocument","collectionPath","GetSingleDoc","docId","_this9","docSnap","exists","_this11","hasBeenInited","pathAbsolute","allResources","getUserIdentifier","_this13","associateUsersById","getCurrentUserId","getCurrentUserEmail","uid","collRef","FireClient","rm","checkRemoveIdField","dontAddIdFieldToDoc","transformToDb","documentData","parseDataAndUpload","r","docPath","u","_this2","uploadAndGetLink","useFileNamesInStorage","link","addCreatedByFields","_this4","AddCreatedByFields","disableMeta","currentUserIdentifier","createAtSelector","GetSelectorsCreateAt","renameMetaFields","created_at","casing","metaFieldCasing","defautCase","createBySelector","GetSelectorsCreateBy","created_by","addUpdatedByFields","_this6","AddUpdatedByFields","updateAtSelector","GetSelectorsUpdateAt","updated_at","updateBySelector","updated_by","GetSelectorsUpdateBy","useFileName","name","saveFile","_this10$fireWrapper$p","on","snapshot","progress","bytesTransferred","totalBytes","state","_ref","relativeFilePaths","storageError","_settle","pact","s","_Pact","o","v","observer","onFulfilled","onRejected","callback","_isSettledPact","thenable","findLastQueryCursor","getQueryCursor","params","btoa","JSON","stringify","paramsToQuery","defaultParamsToQueryOptions","filters","entries","where","opStr","sortToQuery","parsedOrder","order","toLocaleLowerCase","orderBy","filtersStepQuery","pagination","paginationToQuery","page","perPage","queryCursor","startAfter","limit","_temp","queryBase","currentPage","newQuery","startAt","lastQueryCursor","snapshots","docsLength","_params$pagination","currentPageParams","_extends","_for","_getQueryCursor","_findLastQueryCursor","_temp2","sortStepQuery","reactAdminParams","softdeleteEnabled","deleted","array","body","check","i","_cycle","FirebaseLazyLoadingClient","client","apiGetList","tryGetResource","getFullParamsForQuery","softDelete","resultsCount","message","total","nextPageCursor","setQueryCursor","allCursorsKey","localCursorKeys","newCursors","parse","concat","getNextPageParams","checkIfOnLastPage","isOnLastPage","_forIn","parsedData","_exit","apiGetManyReference","filterWithTarget","_extends2","target","_temp5","_temp8","_recursivelyMapStorag2","_temp6","nextElementSnapshot","empty","clearQueryCursors","forEach","cursor","AuthClient","optionsInput","persistence","HandleAuthLogin","username","getUserLogin","HandleAuthLogout","HandleAuthError","errorHttp","retrieveStatusTxt","status","HandleAuthCheck","HandleGetPermissions","getIdTokenResult","token","claims","HandleGetIdentity","_this8","displayName","photoURL","fullName","avatar","HandleGetJWTAuthTime","authTime","HandleGetJWTExpirationTime","_this12","expirationTime","HandleGetJWTSignInProvider","_this14","signInProvider","HandleGetJWTIssuedAtTime","_this16","issuedAtTime","HandleGetJWTToken","_this18","AuthProvider","VerifyAuthProviderArgs","logging","login","logout","checkAuth","checkError","getPermissions","getIdentity","getAuthUser","getJWTAuthTime","getJWTExpirationTime","getJWTSignInProvider","getJWTClaims","getJWTToken","run","cb","_cb","errorMsg","code","statusTxt","regexResult","exec","retrieveStatusCode","errorObj","json","verifyDataProviderArgs","MakeFirestoreLogger","ResetCount","shouldReset","docCount","_options$lazyLoading","count","incrementBy","parseInt","currentCountRaw","incremented","incrementRead","_options$firestoreCos","firestoreCostsLogger","_options$firestoreCos2","persistCount","newProviderApi","getList","lazyClient","filterSafe","dataPage","sortArray","_params$sort","softDeleted","filteredData","pageStart","GetList","getOne","GetOne","dataSingle","getMany","GetMany","ids","idObj","matchDocSnaps","permittedData","matches","snap","getManyReference","targetField","targetValue","targetIdFilter","GetManyReference","update","Update","docObj","docObjTransformed","updateMany","UpdateMany","idStr","returnData","create","Create","newId","merge","hasOverridenDocId","overridenId","_r$collection$doc$get","delete","Delete","previousData","DeleteSoft","deleteMany","DeleteManySoft","_step","_iterator","done","docToDelete","commit","DeleteMany"],"mappings":"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"}